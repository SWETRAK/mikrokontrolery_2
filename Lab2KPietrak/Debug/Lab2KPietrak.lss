
Lab2KPietrak.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000002b2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000008  00800060  000002b2  00000346  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000004  00800068  00800068  0000034e  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000034e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000380  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000040  00000000  00000000  000003bc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000a6d  00000000  00000000  000003fc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000654  00000000  00000000  00000e69  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000517  00000000  00000000  000014bd  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000008c  00000000  00000000  000019d4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000366  00000000  00000000  00001a60  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000662  00000000  00000000  00001dc6  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000030  00000000  00000000  00002428  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e2 eb       	ldi	r30, 0xB2	; 178
  68:	f2 e0       	ldi	r31, 0x02	; 2
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a8 36       	cpi	r26, 0x68	; 104
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	a8 e6       	ldi	r26, 0x68	; 104
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	ac 36       	cpi	r26, 0x6C	; 108
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 8a 00 	call	0x114	; 0x114 <main>
  8a:	0c 94 57 01 	jmp	0x2ae	; 0x2ae <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <time>:
  92:	fc 01       	movw	r30, r24
  94:	0f b6       	in	r0, 0x3f	; 63
  96:	f8 94       	cli
  98:	60 91 68 00 	lds	r22, 0x0068	; 0x800068 <__data_end>
  9c:	70 91 69 00 	lds	r23, 0x0069	; 0x800069 <__data_end+0x1>
  a0:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <__data_end+0x2>
  a4:	90 91 6b 00 	lds	r25, 0x006B	; 0x80006b <__data_end+0x3>
  a8:	0f be       	out	0x3f, r0	; 63
  aa:	30 97       	sbiw	r30, 0x00	; 0
  ac:	21 f0       	breq	.+8      	; 0xb6 <time+0x24>
  ae:	60 83       	st	Z, r22
  b0:	71 83       	std	Z+1, r23	; 0x01
  b2:	82 83       	std	Z+2, r24	; 0x02
  b4:	93 83       	std	Z+3, r25	; 0x03
  b6:	08 95       	ret

000000b8 <z3a>:
			PORTA = ~(symbole[3]);
			_delay_ms(2);
	}
}

void z3a() {
  b8:	cf 93       	push	r28
	for(uint8_t i = 0; i<4; i++) {
  ba:	c0 e0       	ldi	r28, 0x00	; 0
  bc:	27 c0       	rjmp	.+78     	; 0x10c <z3a+0x54>
		unsigned char znak = znakiZajecia[rand()%2];
  be:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <rand>
  c2:	81 70       	andi	r24, 0x01	; 1
  c4:	90 78       	andi	r25, 0x80	; 128
  c6:	99 23       	and	r25, r25
  c8:	24 f4       	brge	.+8      	; 0xd2 <z3a+0x1a>
  ca:	01 97       	sbiw	r24, 0x01	; 1
  cc:	8e 6f       	ori	r24, 0xFE	; 254
  ce:	9f 6f       	ori	r25, 0xFF	; 255
  d0:	01 96       	adiw	r24, 0x01	; 1
  d2:	fc 01       	movw	r30, r24
  d4:	ec 59       	subi	r30, 0x9C	; 156
  d6:	ff 4f       	sbci	r31, 0xFF	; 255
  d8:	30 81       	ld	r19, Z
		for(uint8_t j = 0; j<250; j++) {
  da:	20 e0       	ldi	r18, 0x00	; 0
  dc:	14 c0       	rjmp	.+40     	; 0x106 <z3a+0x4e>
			PORTB = ~_BV(i);
  de:	81 e0       	ldi	r24, 0x01	; 1
  e0:	90 e0       	ldi	r25, 0x00	; 0
  e2:	0c 2e       	mov	r0, r28
  e4:	02 c0       	rjmp	.+4      	; 0xea <z3a+0x32>
  e6:	88 0f       	add	r24, r24
  e8:	99 1f       	adc	r25, r25
  ea:	0a 94       	dec	r0
  ec:	e2 f7       	brpl	.-8      	; 0xe6 <z3a+0x2e>
  ee:	80 95       	com	r24
  f0:	88 bb       	out	0x18, r24	; 24
			PORTA = ~(znak);
  f2:	83 2f       	mov	r24, r19
  f4:	80 95       	com	r24
  f6:	8b bb       	out	0x1b, r24	; 27
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  f8:	83 ef       	ldi	r24, 0xF3	; 243
  fa:	91 e0       	ldi	r25, 0x01	; 1
  fc:	01 97       	sbiw	r24, 0x01	; 1
  fe:	f1 f7       	brne	.-4      	; 0xfc <z3a+0x44>
 100:	00 c0       	rjmp	.+0      	; 0x102 <z3a+0x4a>
 102:	00 00       	nop
}

void z3a() {
	for(uint8_t i = 0; i<4; i++) {
		unsigned char znak = znakiZajecia[rand()%2];
		for(uint8_t j = 0; j<250; j++) {
 104:	2f 5f       	subi	r18, 0xFF	; 255
 106:	2a 3f       	cpi	r18, 0xFA	; 250
 108:	50 f3       	brcs	.-44     	; 0xde <z3a+0x26>
			_delay_ms(2);
	}
}

void z3a() {
	for(uint8_t i = 0; i<4; i++) {
 10a:	cf 5f       	subi	r28, 0xFF	; 255
 10c:	c4 30       	cpi	r28, 0x04	; 4
 10e:	b8 f2       	brcs	.-82     	; 0xbe <z3a+0x6>
			PORTB = ~_BV(i);
			PORTA = ~(znak);
			_delay_ms(2);
		}
	}
 110:	cf 91       	pop	r28
 112:	08 95       	ret

00000114 <main>:

int main(void)
{
    /* Replace with your application code */
	
	DDRA = 0xFF;
 114:	8f ef       	ldi	r24, 0xFF	; 255
 116:	8a bb       	out	0x1a, r24	; 26
	DDRB = 0x0F;
 118:	8f e0       	ldi	r24, 0x0F	; 15
 11a:	87 bb       	out	0x17, r24	; 23
	srand(time(NULL));
 11c:	80 e0       	ldi	r24, 0x00	; 0
 11e:	90 e0       	ldi	r25, 0x00	; 0
 120:	0e 94 49 00 	call	0x92	; 0x92 <time>
 124:	cb 01       	movw	r24, r22
 126:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <srand>
		
		//z1();
		//z2();
		//z3();
		
		z3a();
 12a:	0e 94 5c 00 	call	0xb8	; 0xb8 <z3a>
 12e:	fd cf       	rjmp	.-6      	; 0x12a <main+0x16>

00000130 <do_rand>:
 130:	8f 92       	push	r8
 132:	9f 92       	push	r9
 134:	af 92       	push	r10
 136:	bf 92       	push	r11
 138:	cf 92       	push	r12
 13a:	df 92       	push	r13
 13c:	ef 92       	push	r14
 13e:	ff 92       	push	r15
 140:	cf 93       	push	r28
 142:	df 93       	push	r29
 144:	ec 01       	movw	r28, r24
 146:	68 81       	ld	r22, Y
 148:	79 81       	ldd	r23, Y+1	; 0x01
 14a:	8a 81       	ldd	r24, Y+2	; 0x02
 14c:	9b 81       	ldd	r25, Y+3	; 0x03
 14e:	61 15       	cp	r22, r1
 150:	71 05       	cpc	r23, r1
 152:	81 05       	cpc	r24, r1
 154:	91 05       	cpc	r25, r1
 156:	21 f4       	brne	.+8      	; 0x160 <do_rand+0x30>
 158:	64 e2       	ldi	r22, 0x24	; 36
 15a:	79 ed       	ldi	r23, 0xD9	; 217
 15c:	8b e5       	ldi	r24, 0x5B	; 91
 15e:	97 e0       	ldi	r25, 0x07	; 7
 160:	2d e1       	ldi	r18, 0x1D	; 29
 162:	33 ef       	ldi	r19, 0xF3	; 243
 164:	41 e0       	ldi	r20, 0x01	; 1
 166:	50 e0       	ldi	r21, 0x00	; 0
 168:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <__divmodsi4>
 16c:	49 01       	movw	r8, r18
 16e:	5a 01       	movw	r10, r20
 170:	9b 01       	movw	r18, r22
 172:	ac 01       	movw	r20, r24
 174:	a7 ea       	ldi	r26, 0xA7	; 167
 176:	b1 e4       	ldi	r27, 0x41	; 65
 178:	0e 94 13 01 	call	0x226	; 0x226 <__muluhisi3>
 17c:	6b 01       	movw	r12, r22
 17e:	7c 01       	movw	r14, r24
 180:	ac ee       	ldi	r26, 0xEC	; 236
 182:	b4 ef       	ldi	r27, 0xF4	; 244
 184:	a5 01       	movw	r20, r10
 186:	94 01       	movw	r18, r8
 188:	0e 94 21 01 	call	0x242	; 0x242 <__mulohisi3>
 18c:	dc 01       	movw	r26, r24
 18e:	cb 01       	movw	r24, r22
 190:	8c 0d       	add	r24, r12
 192:	9d 1d       	adc	r25, r13
 194:	ae 1d       	adc	r26, r14
 196:	bf 1d       	adc	r27, r15
 198:	b7 ff       	sbrs	r27, 7
 19a:	03 c0       	rjmp	.+6      	; 0x1a2 <do_rand+0x72>
 19c:	01 97       	sbiw	r24, 0x01	; 1
 19e:	a1 09       	sbc	r26, r1
 1a0:	b0 48       	sbci	r27, 0x80	; 128
 1a2:	88 83       	st	Y, r24
 1a4:	99 83       	std	Y+1, r25	; 0x01
 1a6:	aa 83       	std	Y+2, r26	; 0x02
 1a8:	bb 83       	std	Y+3, r27	; 0x03
 1aa:	9f 77       	andi	r25, 0x7F	; 127
 1ac:	df 91       	pop	r29
 1ae:	cf 91       	pop	r28
 1b0:	ff 90       	pop	r15
 1b2:	ef 90       	pop	r14
 1b4:	df 90       	pop	r13
 1b6:	cf 90       	pop	r12
 1b8:	bf 90       	pop	r11
 1ba:	af 90       	pop	r10
 1bc:	9f 90       	pop	r9
 1be:	8f 90       	pop	r8
 1c0:	08 95       	ret

000001c2 <rand_r>:
 1c2:	0e 94 98 00 	call	0x130	; 0x130 <do_rand>
 1c6:	08 95       	ret

000001c8 <rand>:
 1c8:	80 e6       	ldi	r24, 0x60	; 96
 1ca:	90 e0       	ldi	r25, 0x00	; 0
 1cc:	0e 94 98 00 	call	0x130	; 0x130 <do_rand>
 1d0:	08 95       	ret

000001d2 <srand>:
 1d2:	a0 e0       	ldi	r26, 0x00	; 0
 1d4:	b0 e0       	ldi	r27, 0x00	; 0
 1d6:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
 1da:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 1de:	a0 93 62 00 	sts	0x0062, r26	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
 1e2:	b0 93 63 00 	sts	0x0063, r27	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
 1e6:	08 95       	ret

000001e8 <__divmodsi4>:
 1e8:	05 2e       	mov	r0, r21
 1ea:	97 fb       	bst	r25, 7
 1ec:	1e f4       	brtc	.+6      	; 0x1f4 <__divmodsi4+0xc>
 1ee:	00 94       	com	r0
 1f0:	0e 94 0b 01 	call	0x216	; 0x216 <__negsi2>
 1f4:	57 fd       	sbrc	r21, 7
 1f6:	07 d0       	rcall	.+14     	; 0x206 <__divmodsi4_neg2>
 1f8:	0e 94 26 01 	call	0x24c	; 0x24c <__udivmodsi4>
 1fc:	07 fc       	sbrc	r0, 7
 1fe:	03 d0       	rcall	.+6      	; 0x206 <__divmodsi4_neg2>
 200:	4e f4       	brtc	.+18     	; 0x214 <__divmodsi4_exit>
 202:	0c 94 0b 01 	jmp	0x216	; 0x216 <__negsi2>

00000206 <__divmodsi4_neg2>:
 206:	50 95       	com	r21
 208:	40 95       	com	r20
 20a:	30 95       	com	r19
 20c:	21 95       	neg	r18
 20e:	3f 4f       	sbci	r19, 0xFF	; 255
 210:	4f 4f       	sbci	r20, 0xFF	; 255
 212:	5f 4f       	sbci	r21, 0xFF	; 255

00000214 <__divmodsi4_exit>:
 214:	08 95       	ret

00000216 <__negsi2>:
 216:	90 95       	com	r25
 218:	80 95       	com	r24
 21a:	70 95       	com	r23
 21c:	61 95       	neg	r22
 21e:	7f 4f       	sbci	r23, 0xFF	; 255
 220:	8f 4f       	sbci	r24, 0xFF	; 255
 222:	9f 4f       	sbci	r25, 0xFF	; 255
 224:	08 95       	ret

00000226 <__muluhisi3>:
 226:	0e 94 48 01 	call	0x290	; 0x290 <__umulhisi3>
 22a:	a5 9f       	mul	r26, r21
 22c:	90 0d       	add	r25, r0
 22e:	b4 9f       	mul	r27, r20
 230:	90 0d       	add	r25, r0
 232:	a4 9f       	mul	r26, r20
 234:	80 0d       	add	r24, r0
 236:	91 1d       	adc	r25, r1
 238:	11 24       	eor	r1, r1
 23a:	08 95       	ret

0000023c <__mulshisi3>:
 23c:	b7 ff       	sbrs	r27, 7
 23e:	0c 94 13 01 	jmp	0x226	; 0x226 <__muluhisi3>

00000242 <__mulohisi3>:
 242:	0e 94 13 01 	call	0x226	; 0x226 <__muluhisi3>
 246:	82 1b       	sub	r24, r18
 248:	93 0b       	sbc	r25, r19
 24a:	08 95       	ret

0000024c <__udivmodsi4>:
 24c:	a1 e2       	ldi	r26, 0x21	; 33
 24e:	1a 2e       	mov	r1, r26
 250:	aa 1b       	sub	r26, r26
 252:	bb 1b       	sub	r27, r27
 254:	fd 01       	movw	r30, r26
 256:	0d c0       	rjmp	.+26     	; 0x272 <__udivmodsi4_ep>

00000258 <__udivmodsi4_loop>:
 258:	aa 1f       	adc	r26, r26
 25a:	bb 1f       	adc	r27, r27
 25c:	ee 1f       	adc	r30, r30
 25e:	ff 1f       	adc	r31, r31
 260:	a2 17       	cp	r26, r18
 262:	b3 07       	cpc	r27, r19
 264:	e4 07       	cpc	r30, r20
 266:	f5 07       	cpc	r31, r21
 268:	20 f0       	brcs	.+8      	; 0x272 <__udivmodsi4_ep>
 26a:	a2 1b       	sub	r26, r18
 26c:	b3 0b       	sbc	r27, r19
 26e:	e4 0b       	sbc	r30, r20
 270:	f5 0b       	sbc	r31, r21

00000272 <__udivmodsi4_ep>:
 272:	66 1f       	adc	r22, r22
 274:	77 1f       	adc	r23, r23
 276:	88 1f       	adc	r24, r24
 278:	99 1f       	adc	r25, r25
 27a:	1a 94       	dec	r1
 27c:	69 f7       	brne	.-38     	; 0x258 <__udivmodsi4_loop>
 27e:	60 95       	com	r22
 280:	70 95       	com	r23
 282:	80 95       	com	r24
 284:	90 95       	com	r25
 286:	9b 01       	movw	r18, r22
 288:	ac 01       	movw	r20, r24
 28a:	bd 01       	movw	r22, r26
 28c:	cf 01       	movw	r24, r30
 28e:	08 95       	ret

00000290 <__umulhisi3>:
 290:	a2 9f       	mul	r26, r18
 292:	b0 01       	movw	r22, r0
 294:	b3 9f       	mul	r27, r19
 296:	c0 01       	movw	r24, r0
 298:	a3 9f       	mul	r26, r19
 29a:	70 0d       	add	r23, r0
 29c:	81 1d       	adc	r24, r1
 29e:	11 24       	eor	r1, r1
 2a0:	91 1d       	adc	r25, r1
 2a2:	b2 9f       	mul	r27, r18
 2a4:	70 0d       	add	r23, r0
 2a6:	81 1d       	adc	r24, r1
 2a8:	11 24       	eor	r1, r1
 2aa:	91 1d       	adc	r25, r1
 2ac:	08 95       	ret

000002ae <_exit>:
 2ae:	f8 94       	cli

000002b0 <__stop_program>:
 2b0:	ff cf       	rjmp	.-2      	; 0x2b0 <__stop_program>
